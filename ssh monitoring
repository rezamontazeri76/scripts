#!/bin/bash

# Function to check and install required packages
check_and_install() {
    local package=$1
    if ! command -v "$package" &> /dev/null; then
        echo "$package is not installed. Installing..."
        if [ -x "$(command -v apt)" ]; then
            sudo apt update
            sudo apt install -y "$package"
        elif [ -x "$(command -v yum)" ]; then
            sudo yum install -y "$package"
        else
            echo "Cannot install $package. Unsupported OS."
            exit 1
        fi
    fi
}

# Check and install inotifywait
check_and_install "inotify-tools"
# Check and install swaks
check_and_install "swaks"

# Path to the log file
LOGFILE="/var/log/auth.log"

# Prompt user for Telegram bot token
TOKEN="7229516486:AAFvgMOa0ey3iPIksR3nb3zsYdNHz5pY3Sw"
CHAT_ID="-1002203315590"

# Email details
SENDER_EMAIL="PassBolt@securitywave.co"
RECEIVER_EMAIL="MohammadReza.Montazeri@securitywave.co"
SMTP_SERVER="172.28.110.30"

# Temporary file to store the last processed position
POSITION_FILE="/usr/local/ssh_monitoring/ssh_log_position"
DIR="/usr/local/ssh_monitoring"

# Check if the directory exists
if [ ! -d "$DIR" ]; then
    # Create the directory if it does not exist
    sudo mkdir -p "$DIR"
    echo "Directory $DIR created."
else
    echo "Directory $DIR already exists."
fi

# Function to send message to Telegram
send_to_telegram() {
    local message=$1
    curl -s -X POST "https://api.telegram.org/bot$TOKEN/sendMessage" -d chat_id="$CHAT_ID" -d text="$message"
}

# Function to send email using swaks
send_email() {
    local subject=$1
    local body=$2
    swaks --to "$RECEIVER_EMAIL" --from "$SENDER_EMAIL" --server "$SMTP_SERVER" --header "Subject: $subject" --body "$body"
}

# Initialize position file if it doesn't exist
if [ ! -f "$POSITION_FILE" ]; then
    echo 0 > "$POSITION_FILE"
fi

# Start monitoring the log file for changes
inotifywait -m -e modify "$LOGFILE" | while read -r filename event; do
    # Read the last processed position
    LAST_POS=$(cat "$POSITION_FILE")

    # Get new lines from the log file
    NEW_LINES=$(tail -n +$((LAST_POS + 1)) "$LOGFILE")

    # Process new lines
    echo "$NEW_LINES" | grep 'sshd' | grep 'Accepted' | awk '{print $(NF-3)}' | sort | uniq | while read -r ip; do
        # Send IP address to Telegram
        send_to_telegram "$(cat <<EOF
                            ⚠️ New SSH login ⚠️
Host name: $HOSTNAME
IP: $ip
EOF
)"

        # Send email
        send_email "New SSH Login" "Host name: $HOSTNAME\nIP: $ip"

    done

    # Update the last processed position
    NEW_POS=$(wc -l < "$LOGFILE")
    echo "$NEW_POS" > "$POSITION_FILE"

done
